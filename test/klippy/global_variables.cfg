
[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: 0
position_max: position_max
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: 0
position_max: position_max
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: position_max

[extruder]
step_pin: PA4
dir_pin: PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 33.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: watermark
min_temp: 0
max_temp: 130

[probe]
pin: probe_pin
z_offset: 1.15
drop_first_result: true

[mcu]
serial: /dev/ttyACM0

[printer]
kinematics: cartesian
max_velocity: max_velocity
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[global_variables]
max_velocity: 300
probe_pin: PH6
position_max : 200

[gcode_macro CHECK_GLOBAL_VARIABLES]
gcode:
    {% set global_vars = printer.global_variables %}
    {% set config = printer.configfile.config %}
    {% set substitutions = {"printer.max_velocity" : "max_velocity",
                            "probe.pin" : "probe_pin",
                            "stepper_x.position_max" : "position_max",
                            "stepper_y.position_max" : "position_max",
                            "stepper_y.position_max" : "position_max"}%}
    {% for config_item, substitution in substitutions.items() %}
        {% set section, option = config_item.split(".") %}
        {% if global_vars.variables[substitution] != config[section][option] %}
            {action_raise_error("`%s` value isn't substitute by `%s` value in [%s]" % (option,substitution,section))}
        {% endif %}
        {% if global_vars.substitutions[section][option] != substitution %}
            {action_raise_error("Substitution array doesn't match for %s.%s , %s" % (section,option,substitution))}
        {% endif %}
    {% endfor %}
    {action_respond_info("Congratulations! global_variables checked successfully !")}